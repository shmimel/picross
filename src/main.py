from solver import solve_puzzle
from printer import drawpuzzle
from printer import draw_grid
from picrosspuzzle import convert_clues
from picrosspuzzle import PicrossPuzzle
from pixel_art import draw

def main():
    # drawpuzzle([[[1,1,1],[5],[3],[1,1],[3]],[[2],[4],[3,1],[4],[2]]])
    # print(create_combos([1,2], 6))
    # print(mark_known([[0,0,0],[1,1,1]]))
    # print(cull_combos([[1, 1, 0, 0, 0], [1, 1, -1, -1, -1], [1, 1, -1, 1, -1], [-1, 1, 1, -1, -1]]))
    # clues = [[[1,1,1],[5],[3],[1,1],[3]],[[2],[4],[3,1],[4],[2]]]
    # clues = [[[2,1],[1,3],[1,2],[3],[4],[1]],[[1],[5],[2],[5],[2,1],[2]]]
    # clues = [[[2],[1,1],[4],[2,1],[3,1],[8],[8],[7],[5],[3]],[[1],[2],[1,6],[9],[6],[5],[5],[4],[3],[4]]]
    # row_clues = [(2,),(1,1),(4,),(2,1),(3,1),(8,),(8,),(7,),(5,),(3,)]
    # col_clues = [(1,),(2,),(1,6),(9,),(6,),(5,),(5,),(4,),(3,),(4,)]
    # clues = '2,1.1,4,2.1,3.1,8,8,7,5,3/1,2,1.6,9,6,5,5,4,3,4'
    # clues = '11,17,3.2.2.2,4.5.1,3.4.5,3.4.3.1.3,2.5.2.1.1.2,1.5.3.1.1.2,7.2.2.1.1.1,3.2.11.1,13,1.1,9.1,9.1,9.1,8.2,7.1,5.2,7,4/5,4.2,2.3.3,5.3,4.5,3.6,2.6,2.4.2,2.2.9,2.1.6.5,4.3.2.7,3.2.3.7,2.1.1.3.8,5.2.8,2.1.2.2.8,1.2.3.5.2,1.1.1.2.3.2,1.2.3.3,2.2.6,1.4'
    clues = '7.2.2.7,1.1.1.1.1.1,1.3.1.1.2.1.1.3.1,1.3.1.2.1.3.1.3.1,1.3.1.4.1.1.3.1,1.1.1.1.1.1.1.1,7.1.1.1.1.1.7,1.1.4,4.1.1.1.2.3.1,1.2.1.2,2.3.1.1.3,1.2.3.1.1.1.3,1.1.1.1.1.2.1.1.2,2.4.2.3.1.2,2.1.3.1.1.2.2,1.2.1.2.2.1.1.2,2.3.1.1.6.1,3.2.1.3,7.2.1.1.5,1.1.1.1.5,1.3.1.1.3.6.1,1.3.1.3.5.1.2,1.3.1.1.3.1.3,1.1.2.1.1.6,7.2.1.2.1.1.2/7.1.2.7,1.1.2.1.1.1.1,1.3.1.1.1.1.3.1,1.3.1.1.2.2.1.1.3.1,1.3.1.1.2.1.1.3.1,1.1.3.1.1,7.1.1.1.1.1.7,2.3,1.3.1.4.1.1.4,1.3.1.1.2.3.2.2,1.1.1.1.1.1,3.1.3.1.1.1.1,1.2.1.2.6.1,2.1.1.1.1.1.1.3,1.1.4.1.2.1.1,2.1.2.5,1.5.1.1.8,1.1.2.1.1.1,7.1.2.1.1.1,1.1.1.4.2.2,1.3.1.1.1.1.5.1,1.3.1.1.2.1.4.3,1.3.1.1.2.3.2,1.1.5.2.2.4,7.2.2.1.4.2'
    clues = convert_clues(clues)
    row_clues = clues[0]
    col_clues = clues[1]
    for clue in row_clues:
        print(clue)
    puzzle = PicrossPuzzle(row_clues, col_clues)
    pix_grid = solve_puzzle(puzzle)
    draw_grid(pix_grid)
    print(pix_grid)
    draw(pix_grid)
    



if __name__ == "__main__":
    main()
    
    



